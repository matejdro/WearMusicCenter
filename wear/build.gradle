apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: "kotlin-kapt"

android {
    compileSdkVersion 30
    defaultConfig {
        applicationId "com.matejdro.wearmusiccenter"
        minSdkVersion 23
        targetSdkVersion 30
        versionCode 123
        versionName "1.4.5"
    }
    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    buildFeatures {
        dataBinding true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'

        freeCompilerArgs += "-Xopt-in=kotlin.ExperimentalStdlibApi"
    }
}

dependencies {
    implementation project(path: ':wearutils')
    implementation project(path: ':common')

    implementation 'com.google.android.support:wearable:2.8.1'
    compileOnly 'com.google.android.wearable:wearable:2.8.1'

    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'androidx.appcompat:appcompat:1.3.1'
    implementation 'androidx.core:core-ktx:1.6.0'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.wear:wear:1.1.0'
    implementation 'androidx.fragment:fragment-ktx:1.3.6'
    implementation 'androidx.activity:activity-ktx:1.3.1'
    implementation 'androidx.preference:preference-ktx:1.1.1'

    implementation "com.google.android.gms:play-services-wearable:$play_services_version"

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:${versions.kotlin}"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.3.6"

    testImplementation "com.nhaarman:mockito-kotlin:1.6.0"
    testImplementation "org.mockito:mockito-core:3.3.3"
    testImplementation "org.robolectric:robolectric:4.3.1"
    testImplementation 'junit:junit:4.13'
}
repositories {
    mavenCentral()
}

kotlin {
    experimental {
        coroutines "enable"
    }
}


allprojects {
    afterEvaluate { project ->
        def keystoreProperties = rootProject.file('keystore.properties')
        def debugConfig = 'debug'

        if (keystoreProperties.exists() && android.signingConfigs.hasProperty(debugConfig)) {
            def props = new Properties()
            props.load(new FileInputStream(keystoreProperties))
            android.signingConfigs[debugConfig].storeFile = file(props['storeFile'])
            android.signingConfigs[debugConfig].storePassword = props['storePassword']
            android.signingConfigs[debugConfig].keyAlias = props['keyAlias']
            android.signingConfigs[debugConfig].keyPassword = props['keyPassword']
        }
    }
}
