apply plugin: 'com.android.application'
apply plugin: "kotlin-kapt"
apply plugin: 'kotlin-android'
apply plugin: 'io.fabric'

android {
    compileSdkVersion 27
    defaultConfig {
        applicationId "com.matejdro.wearmusiccenter"
        minSdkVersion 21
        targetSdkVersion 27
        versionCode 10
        versionName "1.3"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        wearAppUnbundled true
    }
    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    dataBinding {
        enabled = true
    }
}

kapt {
    correctErrorTypes = true
}

dependencies {
    implementation project(path: ':wearutils')
    implementation project(path: ':common')

    implementation "com.android.support:preference-v14:$support_lib_version"
    implementation "com.android.support:appcompat-v7:$support_lib_version"
    implementation "com.android.support:support-v4:$support_lib_version"
    implementation "com.android.support:design:$support_lib_version"
    implementation 'com.android.support.constraint:constraint-layout:1.0.2'
    implementation 'android.arch.lifecycle:extensions:1.1.0'
    kapt "com.android.databinding:compiler:$android_plugin_version"

    implementation "com.google.android.gms:play-services-wearable:$play_services_version"
    compileOnly 'com.google.android.wearable:wearable:2.2.0'

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlin_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:0.22.2"

    kapt 'com.google.auto.factory:auto-factory:1.0-beta5'
    kapt 'com.google.auto.value:auto-value:1.5.2'
    // This needs to be annotationProcessor in addition to kapt, otherwise java compiler errors out
    annotationProcessor 'com.google.auto.factory:auto-factory:1.0-beta5'
    annotationProcessor 'com.google.auto.value:auto-value:1.5.2'
    compileOnly 'com.google.auto.value:auto-value:1.5.2'
    compileOnly 'com.google.auto.factory:auto-factory:1.0-beta5'

    compileOnly 'javax.annotation:javax.annotation-api:1.3.1'

    implementation "com.google.dagger:dagger:2.11"
    implementation 'com.google.dagger:dagger-android:2.11'
    implementation 'com.google.dagger:dagger-android-support:2.11'
    kapt 'com.google.dagger:dagger-android-processor:2.11'
    kapt "com.google.dagger:dagger-compiler:2.11"

    implementation 'com.github.h6ah4i:android-advancedrecyclerview:0.11.0'
    implementation 'de.psdev.licensesdialog:licensesdialog:1.8.0'

    implementation('com.crashlytics.sdk.android:crashlytics:2.6.8@aar') {
        transitive = true
    }

    testImplementation 'junit:junit:4.12'
}

kotlin {
    experimental {
        coroutines "enable"
    }
}


allprojects {
    afterEvaluate { project ->
        def keystoreProperties = rootProject.file('keystore.properties')
        def debugConfig = 'debug'

        if (keystoreProperties.exists() && android.signingConfigs.hasProperty(debugConfig)) {
            def props = new Properties()
            props.load(new FileInputStream(keystoreProperties))
            android.signingConfigs[debugConfig].storeFile = file(props['storeFile'])
            android.signingConfigs[debugConfig].storePassword = props['storePassword']
            android.signingConfigs[debugConfig].keyAlias = props['keyAlias']
            android.signingConfigs[debugConfig].keyPassword = props['keyPassword']
        }
    }
}